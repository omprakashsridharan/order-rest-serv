version: '3.9'
services:
  authdb:
    image: mysql/mysql-server:8.0.23
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    env_file: ./.env
    container_name: authdb
    environment:
      MYSQL_DATABASE: $AUTH_DB_NAME
      MYSQL_USER: $AUTH_DB_USER
      MYSQL_PASSWORD: $AUTH_DB_PASSWORD
      MYSQL_ROOT_PASSWORD: $AUTH_DB_ROOT_PASSWORD
      MYSQL_ROOT_HOST: "%"
      RUN_MODE: "Production"
    ports:
      - 3307:3306
    expose:
      - 3306
    volumes:
      - auth-db:/var/lib/mysql
  
  inventorydb:
    image: mysql/mysql-server:8.0.23
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    env_file: ./.env
    container_name: inventorydb
    environment:
      MYSQL_DATABASE: $INVENTORY_DB_NAME
      MYSQL_USER: $INVENTORY_DB_USER
      MYSQL_PASSWORD: $INVENTORY_DB_PASSWORD
      MYSQL_ROOT_PASSWORD: $INVENTORY_DB_ROOT_PASSWORD
      MYSQL_ROOT_HOST: "%"
      RUN_MODE: "Production"
    ports:
      - 3308:3306
    expose:
      - 3306
    volumes:
      - inventory-db:/var/lib/mysql
  
  orderdb:
    image: mysql/mysql-server:8.0.23
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    env_file: ./.env
    container_name: orderdb
    environment:
      MYSQL_DATABASE: $ORDER_DB_NAME
      MYSQL_USER: $ORDER_DB_USER
      MYSQL_PASSWORD: $ORDER_DB_PASSWORD
      MYSQL_ROOT_PASSWORD: $ORDER_DB_ROOT_PASSWORD
      MYSQL_ROOT_HOST: "%"
      RUN_MODE: "Production"
    ports:
      - 3309:3306
    expose:
      - 3306
    volumes:
      - order-db:/var/lib/mysql
  
  authserv:
    image: authserv
    container_name: authserv
    build:
      context: .
      dockerfile: ./authserv.Dockerfile
    depends_on:
      - authdb
    restart: on-failure
    env_file: ./.env
    command: sh -c "/usr/local/bin/wait && /usr/local/bin/authserv"
    ports:
      - 8001:80
    expose:
      - 8001
    environment:
      - RUN_MODE=Production
      - WAIT_HOSTS=authdb:3306
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    stdin_open: true
    tty: true
  
  inventoryserv:
    image: inventoryserv
    container_name: inventoryserv
    build:
      context: .
      dockerfile: ./inventoryserv.Dockerfile
    depends_on:
      - inventorydb
    restart: on-failure
    env_file: ./.env
    command: sh -c "/usr/local/bin/wait && /usr/local/bin/inventoryserv"
    ports:
      - 8002:80
    expose:
      - 8002
    environment:
      - RUN_MODE=Production
      - WAIT_HOSTS=inventorydb:3306
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    stdin_open: true
    tty: true

  orderserv:
    image: orderserv
    container_name: orderserv
    build:
      context: .
      dockerfile: ./orderserv.Dockerfile
    depends_on:
      - orderdb
    restart: on-failure
    env_file: ./.env
    command: sh -c "/usr/local/bin/wait && /usr/local/bin/orderserv"
    ports:
      - 8003:80
    expose:
      - 8003
    environment:
      - RUN_MODE=Production
      - WAIT_HOSTS=orderdb:3306
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    stdin_open: true
    tty: true

  gateway:
    depends_on:
      - authserv
    image: gateway
    container_name: gateway
    build:
      context: .
      dockerfile: ./gateway.Dockerfile
    restart: on-failure
    env_file: ./.env
    environment:
      - RUN_MODE=Production
    ports:
      - 8000:80
    expose:
      - 80
    stdin_open: true
    tty: true
volumes:
  auth-db:
  inventory-db:
  order-db: